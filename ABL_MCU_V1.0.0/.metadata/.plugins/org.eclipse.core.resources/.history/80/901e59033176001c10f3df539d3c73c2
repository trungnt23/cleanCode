/*******************************************************************************
 *
 * Description: Assignment4
 * Project name: ABL_MCU_V1.0.0
 *
 *
 * Last Changed By:  $Author: TrungNT $
 * Revision:         $Revision: 1.0 $
 * Last Changed:     $Date: 15/11/2022 $
 *
 ******************************************************************************/

/**Libraries******************************************************************/
#include <stdint.h>
#include <stm32f401re_rcc.h>
#include <stm32f401re_adc.h>
#include <stm32f401re_gpio.h>
#include <stm32f401re_tim.h>
#include <timer.h>
#include <lightsensor.h>
#include <kalman_filter.h>
/* Private defined*****************************************************************/
#define ADC_PORT				    GPIOC
#define ADC_PIN             	    GPIO_Pin_5

/* Private variables**************************************************************/

/* Private function prototypes****************************************************/
int main(void)
{

}

static void LightSensor_AdcInit(void)
{
		ADC_CommonInitTypeDef ADC_CommonInitStructure;
		ADC_InitTypeDef ADC_InitStructure;
		GPIO_InitTypeDef GPIO_InitStructure;

		/* Enable peripheral clocks ***********************************************/
		RCC_APB2PeriphClockCmd(ADCx_CLK, ENABLE);
		RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);

		GPIO_InitStructure.GPIO_Pin = ADC_PIN;
		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
		GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
		GPIO_Init(ADC_PORT, &GPIO_InitStructure);

		/* ADC Deinit ***************************************************/
		ADC_DeInit();

		/* ADC Common Init ********************************************************/
		ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
		ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
		ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
		ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
		ADC_CommonInit(&ADC_CommonInitStructure);

		/* ADC1 Init **************************************************************/
		ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
		ADC_InitStructure.ADC_ScanConvMode = DISABLE;
		ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
		ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
		ADC_InitStructure.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
		ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
		ADC_InitStructure.ADC_NbrOfConversion = 1;
		ADC_Init(ADCx_SENSOR, &ADC_InitStructure);

		//Polling Configure
		ADC_EOCOnEachRegularChannelCmd(ADCx_SENSOR, ENABLE);
		ADC_ContinuousModeCmd(ADCx_SENSOR, DISABLE);
		ADC_DiscModeChannelCountConfig(ADCx_SENSOR, 1);
		ADC_DiscModeCmd(ADCx_SENSOR, ENABLE);


		/* ADC1 regular channel15 configuration ************************************/
		ADC_RegularChannelConfig(ADCx_SENSOR, ADC_Channel_15, 1, ADC_SampleTime_15Cycles);

		/* Enable ADC1 */
		ADC_Cmd(ADCx_SENSOR, ENABLE);
}
